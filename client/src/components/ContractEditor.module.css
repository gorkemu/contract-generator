/* client/src/components/ContractEditor.module.css */
.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: var(--space-xl);
}

.contentPanel {
  background: white;
  border: 1px solid var(--gray-200);
  border-radius: var(--border-radius-lg);
  padding: var(--space-xl);
  box-shadow: var(--shadow-sm);
}

h1 {
  color: var(--gray-900);
  margin-bottom: var(--space-sm);
}

.category {
  display: inline-block;
  color: var(--primary-color);
  font-size: var(--font-size-sm);
  margin-bottom: var(--space-xl);
  padding-bottom: var(--space-xs);
  border-bottom: 2px solid var(--primary-color);
}

.editorControls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--space-lg);
  padding-bottom: var(--space-md);
  border-bottom: 1px solid var(--gray-200);
}

.modeSwitch {
  display: flex;
  gap: var(--space-sm);
  border-radius: var(--border-radius-sm);
  background: var(--gray-100);
  padding: var(--space-xs);
}

.modeSwitch button {
  border: none;
  background: transparent;
  padding: var(--space-sm) var(--space-md);
  border-radius: var(--border-radius-sm);
  font-weight: var(--font-weight-medium);
  color: var(--gray-600);
  transition: all var(--transition-fast);
}

.modeSwitch button:hover {
  color: var(--gray-800);
}

.modeSwitch button.activeMode {
  background: white;
  color: var(--primary-color);
  box-shadow: var(--shadow-sm);
}

.preview {
  margin-top: var(--space-lg);
  min-height: 400px;
}

.paragraphContainer {
  position: relative;
  margin-bottom: var(--space-xs);
  padding: var(--space-md) var(--space-xl) var(--space-md) var(--space-md);
  border-radius: var(--border-radius-md);
  background-color: white;
  border: 1px solid var(--gray-200);
  transition: all var(--transition-fast);
}

.paragraphContainer.delete-indicator:after {
  content: "üóëÔ∏è";
  position: absolute;
  right: var(--space-sm);
  top: 50%;
  transform: translateY(-50%);
  opacity: 0.3;
  font-size: 0.9em;
  transition: all var(--transition-fast);
  pointer-events: none;
}

.deleteButton {
  position: absolute;
  top: 50%;
  right: var(--space-sm);
  transform: translateY(-50%);
  background: none;
  border: none;
  color: var(--danger-color);
  cursor: pointer;
  font-size: 16px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--transition-fast);
  opacity: 0;
  border-radius: 50%;
  background-color: rgba(var(--danger-color-rgb), 0.05);
  z-index: 2;
}

.paragraphContainer:hover .deleteButton,
.activeParagraph .deleteButton {
  opacity: 1;
  background-color: rgba(var(--danger-color-rgb), 0.1);
}

.deleteButton:hover {
  background-color: rgba(var(--danger-color-rgb), 0.2) !important;
  transform: translateY(-50%) scale(1.1);
}

.deleteButton:active {
  transform: translateY(-50%) scale(0.9);
}

.paragraphContainer:hover.delete-indicator:after,
.activeParagraph.delete-indicator:after {
  opacity: 0;
}

.activeParagraph {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 1px var(--primary-color);
  background-color: rgba(var(--primary-color-rgb), 0.03);
}

.editableParagraph {
  cursor: text;
  padding: var(--space-xs) 24px var(--space-xs) var(--space-xs);
  margin: 0;
  white-space: pre-wrap;
  line-height: 1.6;
  transition: all var(--transition-fast);
  position: relative;
}

.editableParagraph:after {
  content: "‚úèÔ∏è";
  position: absolute;
  right: 8px;
  top: 50%;
  transform: translateY(-50%);
  opacity: 0.3;
  font-size: 0.8em;
  transition: all var(--transition-fast);
  cursor: pointer;
  padding: 2px;
  border-radius: 3px;
  background-color: transparent;
}

.editableParagraph:hover:after,
.editableParagraph:focus-within:after {
  opacity: 0.8;
  background-color: rgba(0, 0, 0, 0.05);
}

.editableParagraph:active:after {
  transform: translateY(-50%) scale(0.9);
}

.editableParagraph:hover {
  background-color: var(--gray-50);
  box-shadow: inset 0 0 0 1px var(--gray-300);
}

.contentEditMode:hover {
  background-color: rgba(var(--primary-color-rgb), 0.05);
}

.paragraphEdit {
  margin-bottom: var(--space-md);
  border: 1px solid var(--gray-300);
  padding: var(--space-md);
  border-radius: var(--border-radius-md);
  background-color: var(--gray-50);
  animation: fadeIn 0.2s ease-out;
}

@keyframes fadeIn {
  from { opacity: 0.5; transform: translateY(5px); }
  to { opacity: 1; transform: translateY(0); }
}

.paragraphEdit textarea {
  width: 100%;
  min-height: 100px;
  padding: var(--space-sm);
  border: 1px solid var(--gray-300);
  border-radius: var(--border-radius-sm);
  font-family: inherit;
  font-size: inherit;
  resize: vertical;
  transition: all var(--transition-fast);
}

.paragraphEdit textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(var(--primary-color-rgb), 0.2);
}

.editButtons {
  display: flex;
  gap: var(--space-sm);
  margin-top: var(--space-sm);
  justify-content: flex-end;
}

.variableHighlight {
  cursor: pointer;
  padding: 2px 6px;
  border-radius: var(--border-radius-sm);
  transition: all var(--transition-fast);
  background-color: rgba(var(--primary-color-rgb), 0.1);
  color: var(--primary-dark);
  font-weight: var(--font-weight-medium);
  position: relative;
  display: inline-flex;
  align-items: center;
}

.variableHighlight:after {
  content: "‚úèÔ∏è";
  margin-left: 4px;
  font-size: 0.7em;
  opacity: 0;
  transition: all var(--transition-fast);
  display: inline-block;
  cursor: pointer;
  transform-origin: center;
}

.variableHighlight:hover:after {
  opacity: 0.7;
}

.variableHighlight:hover {
  background-color: rgba(var(--primary-color-rgb), 0.2);
  transform: translateY(-1px);
}

.variableHighlight:hover:after {
  opacity: 0.8;
  transform: scale(1.1);
}

.variableHighlight:active:after {
  transform: scale(0.9);
}

.emptyVariable {
  background-color: rgba(var(--warning-color-rgb), 0.15);
  color: var(--warning-color);
}

.variableInputEdit {
  display: inline-block;
  position: relative;
  margin: 0 var(--space-xs);
}

.variableInputEdit input {
  padding: var(--space-xs) var(--space-sm);
  border: 2px solid var(--primary-color);
  border-radius: var(--border-radius-sm);
  background-color: white;
  box-shadow: var(--shadow-sm);
  min-width: 120px;
  font: inherit;
}

.errorInput {
  border-color: var(--danger-color) !important;
  background-color: rgba(var(--danger-color-rgb), 0.05) !important;
}

.errorTooltip {
  position: absolute;
  bottom: 100%;
  left: 0;
  background-color: var(--danger-color);
  color: white;
  padding: var(--space-xs) var(--space-sm);
  border-radius: var(--border-radius-sm);
  font-size: var(--font-size-sm);
  white-space: nowrap;
  z-index: 10;
  margin-bottom: var(--space-xs);
  animation: shake 0.5s ease-in-out;
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  20%, 60% { transform: translateX(-3px); }
  40%, 80% { transform: translateX(3px); }
}

.paragraphDivider {
  position: relative;
  height: 16px;
  margin: 8px 0;
  transition: all var(--transition-fast);
  z-index: 5;
  display: flex;
  align-items: center;
  justify-content: center;
}

.paragraphDivider:before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 1px;
  background-color: var(--gray-200);
  z-index: 1;
}

.dividerHover {
  background-color: rgba(var(--primary-color-rgb), 0.05);
}

.dividerHover:before {
  background-color: var(--primary-color);
}

.dividerAddButton {
  position: relative;
  width: 28px;
  height: 28px;
  border-radius: 50%;
  background-color: white;
  border: 2px solid var(--primary-color);
  color: var(--primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  cursor: pointer;
  box-shadow: var(--shadow-sm);
  z-index: 2;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.dividerAddButton:hover {
  background-color: var(--primary-color);
  color: white;
  transform: scale(1.1);
  box-shadow: var(--shadow-md);
}

.dividerAddButton:active {
  transform: scale(0.95);
}

.exportButton {
  display: block;
  margin: var(--space-xl) auto 0;
  padding: var(--space-md) var(--space-lg);
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: var(--border-radius-md);
  cursor: pointer;
  font-weight: var(--font-weight-medium);
  transition: all var(--transition-fast);
  min-width: 180px;
  text-align: center;
}

.exportButton:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.exportButton:active {
  transform: translateY(0);
  box-shadow: var(--shadow-sm);
}

.exportButton[data-has-errors="true"] {
  background-color: var(--danger-color);
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); }
  100% { transform: scale(1); }
}

.saveButton, .cancelButton {
  padding: var(--space-xs) var(--space-md);
  border: none;
  border-radius: var(--border-radius-sm);
  font-weight: var(--font-weight-medium);
  font-size: var(--font-size-sm);
  transition: all var(--transition-fast);
}

.saveButton {
  background-color: var(--success-color);
  color: white;
}

.saveButton:hover {
  background-color: #5cb85c;
  transform: translateY(-1px);
}

.saveButton:active {
  transform: translateY(0);
}

.cancelButton {
  background-color: var(--gray-500);
  color: white;
}

.cancelButton:hover {
  background-color: var(--gray-600);
  transform: translateY(-1px);
}

.cancelButton:active {
  transform: translateY(0);
}

@keyframes fadeOut {
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.9); }
}

.deleting {
  animation: fadeOut 0.3s ease-out forwards;
}

.editingMode-content .paragraphContainer {
  padding-right: var(--space-xl);
}

.editingMode-content .paragraphContainer.delete-indicator:after {
  opacity: 0.3;
}

.editingMode-content .paragraphContainer:hover.delete-indicator:after {
  opacity: 0;
}

.loading, .error {
  padding: var(--space-xl);
  text-align: center;
  border-radius: var(--border-radius-md);
  margin: var(--space-xl) 0;
}

.loading {
  background-color: var(--gray-100);
  color: var(--gray-700);
}

.error {
  background-color: rgba(var(--danger-color-rgb), 0.05);
  color: var(--danger-color);
  border: 1px solid rgba(var(--danger-color-rgb), 0.2);
}

@media (max-width: 768px) {
  .container {
    padding: var(--space-md);
  }

  .contentPanel {
    padding: var(--space-md);
  }

  .editorControls {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--space-md);
  }

  .modeSwitch {
    width: 100%;
  }

  .paragraphEdit textarea {
    min-height: 150px;
  }
  
  .editableParagraph:after {
    display: none;
  }
}